import React, { useContext, useEffect, useState } from "react";
import Image from "next/image";
import Head from "next/head";

import bannerImg from "@/assets/banner.svg";
import { Search } from "@/components/Search";
import { api } from "@/services/api";

import { HomeContainer, HomeContent } from "@/styles/home";

import { AppContext } from "@/context";
interface responseProp {
  user: {
    login: string;
  };
}

export default function Home() {
  const [repoPullReq, setRepoPullReq] = useState(""); //nome do repositorio
  const [pullReqData, setPullReqData] = useState({});
  const [userAvatarUrl, setUserAvatarUrl] = useState(""); //url do avatar do usuario
  const [urlPullRepo, setUrlPullRepo] = useState(""); //url do pull request
  const [user, setUser] = useState({}); //usuario

  const [userHtmlUrl, setUserHtmlUrl] = useState(""); //url do usuario para buscar o name description
  const [userNameDescription, setUserNameDescription] = useState("");

  const context = useContext(AppContext);

  const searchPullRequest = async (prUrl: string) => {
    const match: RegExpMatchArray | null = prUrl.match(
      /https:\/\/github\.com\/([^/]+)\/([^/]+)\/pull\/(\d+)/
    );
    if (match) {
      const owner: string = match[1];
      const repo: string = match[2];
      const pull_number: string = match[3];
      const response = await api
        .get<responseProp>(`/repos/${owner}/${repo}/pulls/${pull_number}`)
        .catch((error) => {
          console.log(error);
        });
      // console.log(response?.data.user.login, repo);
      setUser(response.data.user.login);
      // console.log(response.data);
      setUrlPullRepo(prUrl); //url do pull request
      setRepoPullReq(repo); //nome do repositorio
      setPullReqData(response.data);
      setUserAvatarUrl(response.data.user.avatar_url); //url do avatar do usuario
      setUserHtmlUrl(response.data.user.url); //url do usuario para buscar o name description

      const responseName = await api
        .get(`/users/${user}`)
        .then((responseNameData) => {
          setUserNameDescription(responseNameData.data.name);
        });

      console.log(userNameDescription);
    }
    // if (userHtmlUrl !== "") {
    //   const responseName = await api.get(`/users/${user}`);
    //   setUserNameDescription(responseName.data.name);
    // }
    else {
      console.log("Invalid URL");
    }
  };

  if (userNameDescription !== "") {
    useEffect(() => {
      const user = {
        urlPullRequest: urlPullRepo,
        repo: repoPullReq,
        imgUrl: userAvatarUrl,
        nameDescription: userNameDescription,
      };
      context.updateUser(user);
    }, []);
  }

  return (
    <>
      <Head>
        <title>Pull Snap</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <HomeContainer>
        <HomeContent>
          <Search
            label="Link do Pull Request"
            textButton="Pesquisar"
            action={(url) => searchPullRequest(url)}
          />
          <Image src={bannerImg} alt="" priority />
        </HomeContent>
      </HomeContainer>
    </>
  );
}
